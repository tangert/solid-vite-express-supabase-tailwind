{
  "version": 3,
  "sources": ["../../src/Icon.tsx", "../../../shared/src/utils.ts"],
  "sourcesContent": ["import { For, splitProps } from 'solid-js';\nimport { Dynamic } from 'solid-js/web';\nimport defaultAttributes from './defaultAttributes';\nimport { IconNode, LucideProps } from './types';\nimport { toKebabCase } from '@lucide/shared';\n\ninterface IconProps {\n  name: string;\n  iconNode: IconNode;\n}\n\nconst Icon = (props: LucideProps & IconProps) => {\n  const [localProps, rest] = splitProps(props, [\n    'color',\n    'size',\n    'strokeWidth',\n    'children',\n    'class',\n    'name',\n    'iconNode',\n    'absoluteStrokeWidth',\n  ]);\n\n  return (\n    <svg\n      {...defaultAttributes}\n      width={localProps.size ?? defaultAttributes.width}\n      height={localProps.size ?? defaultAttributes.height}\n      stroke={localProps.color ?? defaultAttributes.stroke}\n      stroke-width={\n        localProps.absoluteStrokeWidth\n          ? (Number(localProps.strokeWidth ?? defaultAttributes['stroke-width']) * 24) /\n            Number(localProps.size)\n          : Number(localProps.strokeWidth ?? defaultAttributes['stroke-width'])\n      }\n      class={`lucide lucide-${toKebabCase(localProps?.name ?? 'icon')} ${\n        localProps.class != null ? localProps.class : ''\n      }`}\n      {...rest}\n    >\n      <For each={localProps.iconNode}>\n        {([elementName, attrs]) => {\n          return (\n            <Dynamic\n              component={elementName}\n              {...attrs}\n            />\n          );\n        }}\n      </For>\n    </svg>\n  );\n};\n\nexport default Icon;\n", "/**\n * Converts string to KebabCase\n *\n * @param {string} string\n * @returns {string} A kebabized string\n */\nexport const toKebabCase = (string: string) =>\n  string.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n"],
  "mappings": ";;;;;;;;AAAA,SAAS,KAAK,kBAAkB;AAChC,SAAS,eAAe;AACxB,OAAO,uBAAuB;;;ACIvB,IAAM,cAAc,CAAC,WAC1B,OAAO,QAAQ,sBAAsB,OAAO,EAAE,YAAY;;;ADI5D,IAAM,OAAO,CAAC,UAAmC;AAC/C,QAAM,CAAC,YAAY,IAAI,IAAI,WAAW,OAAO;AAAA,IAC3C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,SACE,CAAC;AAAA,QACK;AAAA,IACJ,OAAO,WAAW,QAAQ,kBAAkB;AAAA,IAC5C,QAAQ,WAAW,QAAQ,kBAAkB;AAAA,IAC7C,QAAQ,WAAW,SAAS,kBAAkB;AAAA,IAC9C,cACE,WAAW,sBACN,OAAO,WAAW,eAAe,kBAAkB,cAAc,CAAC,IAAI,KACvE,OAAO,WAAW,IAAI,IACtB,OAAO,WAAW,eAAe,kBAAkB,cAAc,CAAC;AAAA,IAExE,OAAO,iBAAiB,YAAY,YAAY,QAAQ,MAAM,CAAC,IAC7D,WAAW,SAAS,OAAO,WAAW,QAAQ,EAChD;AAAA,QACI;AAAA,GAEJ,CAAC,IAAI,MAAM,WAAW,WACnB,CAAC,CAAC,aAAa,KAAK,MAAM;AACzB,WACE,CAAC;AAAA,MACC,WAAW;AAAA,UACP;AAAA,IACN;AAAA,EAEJ,EACF,EATC,IAUH,EA1BC;AA4BL;AAEA,IAAO,eAAQ;",
  "names": []
}
